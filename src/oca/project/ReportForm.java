
package oca.project;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;



/**
 *
 * Form that allows running various reports 
 */
public class ReportForm extends javax.swing.JFrame {
        
    private ArrayList<Person> personList;
    private MainForm mainForm;
    private ArrayList<PayrollReportItem> payrollRecordList;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DefaultComboBoxModel model;
    
    /**
     * Creates new form ReportForm
     */
    public ReportForm(ArrayList <PayrollReportItem> payrollRecordList) {
        initComponents();
        this.payrollRecordList = payrollRecordList;
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgMessage = new javax.swing.JOptionPane();
        btnPaymentForPeriod = new javax.swing.JButton();
        btnBonusReport = new javax.swing.JButton();
        btnPaymentHistoryForPerson = new javax.swing.JButton();
        btnFortnighlyPayments = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnMonthlyPayments = new javax.swing.JButton();
        cboName = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFirstDate = new javax.swing.JTextField();
        txtSecondDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReport = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPaymentForPeriod.setBackground(new java.awt.Color(204, 204, 255));
        btnPaymentForPeriod.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnPaymentForPeriod.setText("All payments for a period");
        btnPaymentForPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentForPeriodActionPerformed(evt);
            }
        });

        btnBonusReport.setBackground(new java.awt.Color(204, 204, 255));
        btnBonusReport.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBonusReport.setText("Bonuses report");
        btnBonusReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBonusReportActionPerformed(evt);
            }
        });

        btnPaymentHistoryForPerson.setBackground(new java.awt.Color(204, 204, 255));
        btnPaymentHistoryForPerson.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnPaymentHistoryForPerson.setText("Payment history by person");
        btnPaymentHistoryForPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentHistoryForPersonActionPerformed(evt);
            }
        });

        btnFortnighlyPayments.setBackground(new java.awt.Color(204, 204, 255));
        btnFortnighlyPayments.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnFortnighlyPayments.setText("List Fortnightly Payments");
        btnFortnighlyPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFortnighlyPaymentsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Payroll Reports");

        btnMonthlyPayments.setBackground(new java.awt.Color(204, 204, 255));
        btnMonthlyPayments.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnMonthlyPayments.setText("List Monthly Payments");
        btnMonthlyPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlyPaymentsActionPerformed(evt);
            }
        });

        cboName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnBack.setBackground(new java.awt.Color(204, 204, 255));
        btnBack.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("First Date:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Second Date:");

        txtFirstDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtSecondDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtReport.setColumns(20);
        txtReport.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtReport.setRows(5);
        jScrollPane1.setViewportView(txtReport);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnPaymentForPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBonusReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPaymentHistoryForPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFortnighlyPayments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMonthlyPayments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(80, 80, 80)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtSecondDate)
                                        .addComponent(txtFirstDate)))
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jSeparator1))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtFirstDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSecondDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPaymentForPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBonusReport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(cboName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPaymentHistoryForPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFortnighlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMonthlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 66, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(31, 31, 31)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    

    //event handler for the Back button that closes the current form and displays the main form 
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       this.setVisible(false);
       mainForm.setVisible(true);
       txtReport.setText("");
       txtFirstDate.setText("");
       txtSecondDate.setText("");
    }//GEN-LAST:event_btnBackActionPerformed

    //event handler for the button that displays all payments made within a period between two dates
    private void btnPaymentForPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentForPeriodActionPerformed
        String message = "";
        txtReport.setText("");
        
        if(txtFirstDate.getText().equals("") || txtSecondDate.getText().equals("")) {   //checking if dates have been entered
            message = "Please enter the first date and second date.";
        }
        else {
            try {
                Date firstDate = sdf.parse(txtFirstDate.getText());
                Date secondDate = sdf.parse(txtSecondDate.getText());
                
                for(PayrollReportItem pri : payrollRecordList) {
                    
                    //Checking if the pay period date is between the given dates (inclusive)
                    if(pri.getStartOfPayPeriod().compareTo(firstDate) >= 0 && 
                            pri.getStartOfPayPeriod().compareTo(secondDate) <= 0) {
                        txtReport.setText(txtReport.getText() + " " + pri.toString() + "\n");
                    }
                }
            }
            catch (ParseException pe) { //catching parse date exceptions
                message = "Please enter the dates in proper format, e.g. 18/04/1989";
                txtFirstDate.setText("");
                txtSecondDate.setText("");
            }
            
            if(txtReport.getText().equals("")) {
                message = "There is no record of any payments made on specified dates.";
            }
        }
        if(!message.equals("")) {
            msgMessage.showMessageDialog(this, message, "Announcement", 
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }           
    }//GEN-LAST:event_btnPaymentForPeriodActionPerformed


    
    //event handler for the button that displays 
    //information about all the bonuses assigned to subordinates
    private void btnBonusReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBonusReportActionPerformed
        txtReport.setText("");
        for(Person p : getPersonList()) {
            if(p instanceof SalariedSubordinate) {  //checking object's instance
                SalariedSubordinate salariedSubordinate = (SalariedSubordinate) p;
                
                if(salariedSubordinate.getCurrentBonus() != 0) {    //checking if bonus has been assigned
                    txtReport.setText(txtReport.getText() + salariedSubordinate.toString()
                        + " has a bonus of $" + salariedSubordinate.getCurrentBonus() + "\n");
                }
            }
            if (p instanceof CEO) { //checking object's instance
                CEO ceo = (CEO) p;  
                if(ceo.getCurrentBonus() != 0) {    //checking if bonus has been assigned
                    txtReport.setText(txtReport.getText() + ceo.toString()
                    + " has a bonus of $" + ceo.getCurrentBonus() + "\n");
                }
            }
        }
        if(txtReport.getText().equals("")) {
            msgMessage.showMessageDialog(this, "No bonus assigned yet to any employee", "Announcement", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_btnBonusReportActionPerformed

    //event handler for the button that displays all payments for the employee selected in the cboName
    private void btnPaymentHistoryForPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentHistoryForPersonActionPerformed
        String message = "";
        txtReport.setText("");
        if(payrollRecordList.isEmpty()) {   //checking if there are records of payments made
            message ="There is no record yet of any payments made to " + cboName.getSelectedItem();
        }
        else if(cboName.getSelectedItem() == null) {    //checking if an item has been selected from the combo box
            message = "Please choose an employee from the list";
        } 
        else {
            for(PayrollReportItem pri : payrollRecordList) {    //looping through and getting the assigned
                if(pri.getPerson().equals(cboName.getSelectedItem())) {     //bonus for each oject
                    txtReport.setText(txtReport.getText() + pri.toString() + "\n");
                }
            }
            
            if(txtReport.getText().equals("")){ //checking if payment has been made to a particular person object
                message = "No payment made yet for " + cboName.getSelectedItem();
            }
        }
        if(!message.equals("")) {
            msgMessage.showMessageDialog(this, message, "Announcement", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
 
    }//GEN-LAST:event_btnPaymentHistoryForPersonActionPerformed

    
    //event handler for the button displaying all fortnightly payments made
    private void btnFortnighlyPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFortnighlyPaymentsActionPerformed
        String message = "";
        txtReport.setText("");
        if(payrollRecordList.isEmpty()) {
            message = "The list of fortnightly payments is empty.";
        }
        else {
            for(PayrollReportItem pri : payrollRecordList) {
                if(pri.getPayPeriod().equals(TimePeriod.FORTNIGHTLY)) {
                    txtReport.setText(txtReport.getText() + pri.toString() + "\n");
                }
            }
        }
        
        if(!message.equals("")) {
            msgMessage.showMessageDialog(this, message, "Announcement", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnFortnighlyPaymentsActionPerformed

    
    //event handler for the button displaying all monthly payments made
    private void btnMonthlyPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlyPaymentsActionPerformed
        String message = "";
        txtReport.setText("");
          if(payrollRecordList.isEmpty()) {
            message = "The list of monthly payments is empty.";
        }
        else {
            for(PayrollReportItem pri : payrollRecordList) {
                if(pri.getPayPeriod().equals(TimePeriod.MONTHLY)) {
                    txtReport.setText( txtReport.getText() + pri.toString() + "\n");
                }
            }
        } 
          if(!message.equals("")) {
            msgMessage.showMessageDialog(this, message, "Announcement", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnMonthlyPaymentsActionPerformed
    
    //populates cboName with all the perople working in the company
    public void populateNameComboBox() {
        model = new DefaultComboBoxModel();
        for(Person p : getPersonList()) {
            model.addElement(p);
        }
        cboName.setModel(model);
    }

         

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBonusReport;
    private javax.swing.JButton btnFortnighlyPayments;
    private javax.swing.JButton btnMonthlyPayments;
    private javax.swing.JButton btnPaymentForPeriod;
    private javax.swing.JButton btnPaymentHistoryForPerson;
    private javax.swing.JComboBox cboName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JOptionPane msgMessage;
    private javax.swing.JTextField txtFirstDate;
    private javax.swing.JTextArea txtReport;
    private javax.swing.JTextField txtSecondDate;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the personList
     */
    public ArrayList<Person> getPersonList() {
        return personList;
    }

    /**
     * @param personList the personList to set
     */
    public void setPersonList(ArrayList<Person> personList) {
        this.personList = personList;
    }

    /**
     * @return the mainForm
     */
    public MainForm getMainForm() {
        return mainForm;
    }

    /**
     * @param mainForm the mainForm to set
     */
    public void setMainForm(MainForm mainForm) {
        this.mainForm = mainForm;
    }


}
