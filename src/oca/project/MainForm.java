package oca.project;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

/*
 * Form that allows user to navigate between three functional forms 
 */
public class MainForm extends javax.swing.JFrame {

        
    //array list to hold the report items
    private ArrayList <PayrollReportItem> payrollRecordList = new ArrayList<>();

    //Creating new instances of the forms
    private AssignBonusForm assignBonusForm = new AssignBonusForm(payrollRecordList);
    private CreatePaymentsForm createPaymentsForm = new CreatePaymentsForm(payrollRecordList);
    private PersonalDataForm personalDataForm = new PersonalDataForm(payrollRecordList);
    private ReportForm reportForm = new ReportForm(payrollRecordList);
    
    

    //setting up date format
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private Date currentMonthlyPaymentDate;
    private Date currentFortnightlyPaymentDate;
    private String startDateOfPayment = "01/01/2015";
    Calendar cal = Calendar.getInstance();
    
    

    /**
    * Creates new form MainForm
     * @param listOfPeople
    */
    public MainForm(ArrayList<Person> personList) throws ParseException {
        initComponents();
        
        //setting up first payment date for both fortnightly and weekly payments
        setCurrentMonthlyPaymentDate(sdf.parse(startDateOfPayment));
        setCurrentFortnightlyPaymentDate(sdf.parse(startDateOfPayment));
        passPersonArrayToForms(personList);
        
        Color lightGreen = new Color(192,249,142);
        assignBonusForm.getContentPane().setBackground(lightGreen);
        createPaymentsForm.getContentPane().setBackground(lightGreen);
        personalDataForm.getContentPane().setBackground(lightGreen);
        reportForm.getContentPane().setBackground(lightGreen);
    }
    
    //method that passes the ArrayList of person objects to each forms and
    //also calling methods to populate comboboxes
    public void passPersonArrayToForms(ArrayList<Person> personList) {
        assignBonusForm.setPersonList(personList);  
        createPaymentsForm.setPersonList(personList);
        personalDataForm.setPersonList(personList);
        reportForm.setPersonList(personList); 
    }
    
    
    /**
     * @param listOfPeople the listOfPeople to set
 sets list of people in the MainForm as well as PersonalDataForm and AssignBonusForm to populate the comboBox
     */

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFormTitle = new javax.swing.JLabel();
        btnAssignBonus = new javax.swing.JButton();
        btnPersonalDetails = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnRunReports = new javax.swing.JButton();
        btnCreatePayments = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFormTitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 48)); // NOI18N
        lblFormTitle.setForeground(new java.awt.Color(0, 0, 153));
        lblFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFormTitle.setText("Best IT Payroll");

        btnAssignBonus.setBackground(new java.awt.Color(204, 204, 255));
        btnAssignBonus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAssignBonus.setText("Assign Bonus");
        btnAssignBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignBonusActionPerformed(evt);
            }
        });

        btnPersonalDetails.setBackground(new java.awt.Color(204, 204, 255));
        btnPersonalDetails.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnPersonalDetails.setText("Personal Details and Contractor Data Entry");
        btnPersonalDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalDetailsActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(204, 204, 255));
        btnClose.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnRunReports.setBackground(new java.awt.Color(204, 204, 255));
        btnRunReports.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRunReports.setText("Run Reports");
        btnRunReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunReportsActionPerformed(evt);
            }
        });

        btnCreatePayments.setBackground(new java.awt.Color(204, 204, 255));
        btnCreatePayments.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCreatePayments.setText("Create Payments");
        btnCreatePayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePaymentsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAssignBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPersonalDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreatePayments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRunReports, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(133, 133, 133))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAssignBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPersonalDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(btnCreatePayments, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRunReports, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    //event handler that opens Assign Bonus form
    //the form was initialised earlier, this only sets its visible properties
    //it also calls methods to set values for the comboboxes on the assignBonusForm
    private void btnAssignBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignBonusActionPerformed
        assignBonusForm.populateManagerComboBox();
        assignBonusForm.setMainForm(this);
        assignBonusForm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnAssignBonusActionPerformed

    
    //event handler that opens Personal Details and Creating payments form
    //the form was initialised earlier, this only sets its visible properties
    //it also calls methods to set values for the comboboxes on the personalDetailsForm
    private void btnPersonalDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalDetailsActionPerformed
        personalDataForm.populateNameComboBox();
        personalDataForm.setMainForm(this);
        personalDataForm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnPersonalDetailsActionPerformed

    //event handler for the Close button for closing the application
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed
    

    //event handler that opens Report form
    //the form was initialised earlier, this only sets its visible properties
    //it also calls methods to set values for the comboboxes
    private void btnRunReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunReportsActionPerformed
        reportForm.populateNameComboBox();
        reportForm.setMainForm(this);
        reportForm.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_btnRunReportsActionPerformed

    //event handler that opens Create Payments Form
    private void btnCreatePaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePaymentsActionPerformed
        createPaymentsForm.setMainForm(this);
        createPaymentsForm.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_btnCreatePaymentsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignBonus;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCreatePayments;
    private javax.swing.JButton btnPersonalDetails;
    private javax.swing.JButton btnRunReports;
    private javax.swing.JLabel lblFormTitle;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the payrollRecordList
     */
    public ArrayList <PayrollReportItem> getPayrollRecordList() {
        return payrollRecordList;
    }

    /**
     * @param payrollRecordList the payrollRecordList to set
     */
    public void setPayrollRecordList(ArrayList <PayrollReportItem> payrollRecordList) {
        this.payrollRecordList = payrollRecordList;
    }

    /**
     * @return the currentMonthlyPaymentDate
     */
    public Date getCurrentMonthlyPaymentDate() {
        return currentMonthlyPaymentDate;
    }

    /**
     * @param currentMonthlyPaymentDate the currentMonthlyPaymentDate to set
     */
    public void setCurrentMonthlyPaymentDate(Date currentMonthlyPaymentDate) {
        this.currentMonthlyPaymentDate = currentMonthlyPaymentDate;
    }

    /**
     * @return the currentFortnightlyPaymentDate
     */
    public Date getCurrentFortnightlyPaymentDate() {
        return currentFortnightlyPaymentDate;
    }

    /**
     * @param currentFortnightlyPaymentDate the currentFortnightlyPaymentDate to set
     */
    public void setCurrentFortnightlyPaymentDate(Date currentFortnightlyPaymentDate) {
        this.currentFortnightlyPaymentDate = currentFortnightlyPaymentDate;
    }
    
}
